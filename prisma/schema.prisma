// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Drug {
  id                   Int         @id @default(autoincrement())
  // registrationNo   String       blockchain
  name                 String
  activeIngredient     String
  dosageForm           String
  isAuthentic          Boolean     @default(false)
  verifiedAt           DateTime?   @map("verified_at")
  consumerMedicineInfo String? // attachment
  drugBatches          DrugBatch[]
}

model DrugBatch {
  id              Int       @id @default(autoincrement())
  drug            Drug      @relation(fields: [drugId], references: [id])
  drugId          Int
  batchNo         String // autoincrement but string, e.g. 0000001
  quantity        Int?
  manufactureDate String // MM/YY
  expiryDate      String // MM/YY
  shipment        Shipment? @relation(fields: [shipmentId], references: [id])
  shipmentId      Int?
}

model Shipment {
  id          Int            @id @default(autoincrement())
  drugBatches DrugBatch[]
  // departureTime DateTime
  // arrivalTime   DateTime
  status      ShipmentStatus
}

model Stakeholder {
  id         String   @id @default(uuid())
  name       String
  phoneNo    String   @unique
  email      String
  address    String
  postcode   String?
  state      String?
  country    String
  role       Role
  publicKey  String   @unique
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @updatedAt @map(name: "updated_at")
}

enum Role {
  MANUFACTURER
  IMPORTER
  WHOLESALER
}

enum ShipmentStatus {
  OUT_FOR_DELIVERY
  IN_TRANSIT
  ARRIVED_AT_DESTINATION
  DELIVERED
  DELAYED
  HELD_FOR_INSPECTION
  RETURNED_OR_REJECTED
  LOST_OR_DAMAGED
}
